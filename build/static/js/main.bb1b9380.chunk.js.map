{"version":3,"sources":["assets/videos/horror_background.mp4","assets/images/overlay-1.png","assets/images/overlay-2.png","assets/images/overlay-3.png","assets/images/overlay-4.png","assets/images/overlay-5.png","assets/images/overlay-6.png","assets/images/overlay-blood.png","assets/videos/Loading_Video_Horror.mp4","assets/audio/button_press.mp3","assets/audio/results.mp3","constants/movies.js","components/MoviePickerContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","movies","overlays","Overlay1","Overlay2","Overlay3","Overlay4","Overlay5","Overlay6","OverlayBlood","imgIndex","resultsAudio","Audio","Results","movieAudio","ButtonClick","volume","MoviePickerContainer","props","useState","movieInfo","setMovieInfo","overlay","setOverlay","showVideo","setShowVideo","isPlayingVideo","setIsPlayingVideo","videoRef","useRef","useEffect","setInterval","current","addEventListener","console","log","play","className","muted","ref","src","LoadingVideo","type","Poster","alt","Title","role","Year","Director","Actors","style","backgroundImage","onClick","movie","Math","floor","random","length","axios","get","then","res","data","catch","err","error","disabled","App","autoPlay","loop","BackgroundVideo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bb1b9380.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/horror_background.a7454dca.mp4\";","module.exports = __webpack_public_path__ + \"static/media/overlay-1.3f02e28f.png\";","module.exports = __webpack_public_path__ + \"static/media/overlay-2.d2f5bac2.png\";","module.exports = __webpack_public_path__ + \"static/media/overlay-3.117a22b3.png\";","module.exports = __webpack_public_path__ + \"static/media/overlay-4.682f0563.png\";","module.exports = __webpack_public_path__ + \"static/media/overlay-5.811d1193.png\";","module.exports = __webpack_public_path__ + \"static/media/overlay-6.34e26b7b.png\";","module.exports = __webpack_public_path__ + \"static/media/overlay-blood.b0f7c207.png\";","module.exports = __webpack_public_path__ + \"static/media/Loading_Video_Horror.a679cd21.mp4\";","module.exports = __webpack_public_path__ + \"static/media/button_press.2e851445.mp3\";","module.exports = __webpack_public_path__ + \"static/media/results.852b976b.mp3\";","export const movies = [\n  'The Warriors',\n  'Raising Arizona',\n  'Con Air',\n  'The Fly',\n  // 'Terrifier',\n  // 'Tokyo Gore Police',\n  // 'Neon Deamon',\n  // 'Big Trouble In Little China',\n  'Escape From New York',\n  'Scanners',\n  'Videodrome',\n  'Robocop',\n  'How High',\n  // 'Half baked',\n  'Ghostbusters',\n  'Commando',\n  'Scary Movie 2',\n  'Leon: The Professional',\n  'Starship Troopers',\n  // 'They Live',\n  // 'Way of the Gun',\n  'Rambo',\n  'Predator',\n  'Total Recall',\n  'Prince OF Darkness',\n  'The Mouth of Madness',\n  'Belko Experiment',\n  'Mayhem',\n  // 'Judgement Night',\n  'Tales From The Hood',\n  // 'People Under The Stairs',\n  'Friday',\n  // 'Demon Knight',\n  'The Rock',\n  // 'Buckaroo Banzai',\n  'Timecop',\n  // 'The Running Man',\n  'Best in Show',\n  'Funny Games',\n  // 'Maximum Overdrive',\n  'Romeo Must Die',\n  // 'Tommy Boy',\n  'Caddyshack',\n  'Re-Animator',\n  'Martyrs',\n  'Dead Presidents',\n  'The Ring',\n  'The Goonies',\n  'Brainscan',\n  'Fist of Legend',\n  'Kung Fu Hustle',\n  'Ong-Bak: The Thai Warrior',\n  'Bloodsport',\n  'Heavyweights',\n  'The Raid',\n  'The Night Comes for Us',\n  'Rubber',\n  'Dawn of the Dead',\n  'V/H/S/2',\n  'Rush Hour'\n];\n","import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { movies } from '../constants/movies';\nimport Overlay1 from '../assets/images/overlay-1.png';\nimport Overlay2 from '../assets/images/overlay-2.png';\nimport Overlay3 from '../assets/images/overlay-3.png';\nimport Overlay4 from '../assets/images/overlay-4.png';\nimport Overlay5 from '../assets/images/overlay-5.png';\nimport Overlay6 from '../assets/images/overlay-6.png';\nimport OverlayBlood from '../assets/images/overlay-blood.png';\nimport LoadingVideo from '../assets/videos/Loading_Video_Horror.mp4';\nimport ButtonClick from '../assets/audio/button_press.mp3';\nimport Results from '../assets/audio/results.mp3';\n\nconst overlays = [Overlay1, Overlay2, Overlay3, Overlay4, Overlay5, Overlay6, OverlayBlood];\nlet imgIndex = 0;\n\nconst resultsAudio = new Audio(Results);\n\nconst movieAudio = new Audio(ButtonClick);\nmovieAudio.volume = 0.25;\n\nconst MoviePickerContainer = (props) => {\nconst [movieInfo, setMovieInfo] = useState();\nconst [overlay, setOverlay] = useState(imgIndex);\nconst [showVideo, setShowVideo] = useState(true);\nconst [isPlayingVideo, setIsPlayingVideo] = useState(false);\n\nconst videoRef = useRef(null);\n\nconst handlePressMe = () => {\n  setIsPlayingVideo(true);\n  const movie = movies[Math.floor(Math.random() * movies.length)];\n  setShowVideo(true);\n  videoRef.current.play();\n  movieAudio.play();\n  axios.get(`https://www.omdbapi.com/?apiKey=1183a20f&t=${movie}`)\n    .then(res => {\n      setMovieInfo(res.data);\n    })\n    .catch(err => console.error(err))\n}\n\n  useEffect(() => {\n    setInterval(() => {\n      if(imgIndex === 5) {\n        imgIndex = 0;\n      } else {\n       imgIndex++;\n      }\n      setOverlay(imgIndex);\n      if (videoRef) {\n        videoRef.current.addEventListener(\"ended\", () => {\n          setShowVideo(false);\n          console.log(resultsAudio.volume);\n          resultsAudio.play();\n          setIsPlayingVideo(false);\n        });\n      }\n    },150);\n\n  }, [videoRef]);\n\n  return (\n    <div className=\"movie-picker-container\">\n      <div className=\"movie-picker-relative-container\">\n        <video className={`loading-video${showVideo ? ' show' : ''}`} muted ref={videoRef}>\n          <source src={LoadingVideo} type='video/mp4' />\n        </video>\n        {movieInfo && movieInfo.Poster !== 'N/A' && <img className=\"movie-poster\" src={movieInfo.Poster} alt=\"movie-poster\" />}\n        {movieInfo && movieInfo.Poster === 'N/A' && <div className=\"movie-poster\">{movieInfo.Title}</div>}\n        {movieInfo && (\n          <div className=\"movie-info\" role=\"presentation\">\n            <p>Title: {movieInfo.Title}</p>\n            <p>Year: {movieInfo.Year}</p>\n            <p>Director: {movieInfo.Director}</p>\n            <p>Actors: {movieInfo.Actors}</p>\n          </div>\n        )}\n        <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[0]})`}} role=\"presentation\" />\n        {overlay === 0 && <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[0]})`}} role=\"presentation\" />}\n        {overlay === 1 &&  <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[1]})`}} role=\"presentation\" />}\n        {overlay === 2 &&  <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[2]})`}} role=\"presentation\" />}\n        {overlay === 3 &&  <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[3]})`}} role=\"presentation\" />}\n        {overlay === 4 &&  <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[4]})`}} role=\"presentation\" />}\n        {overlay === 5 &&  <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[5]})`}} role=\"presentation\" />}\n        <div className=\"television-overlay\" style={{backgroundImage: `url(${overlays[6]})`}} role=\"presentation\" />\n        <button className=\"press-me-btn\" onClick={handlePressMe} disabled={isPlayingVideo}> </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MoviePickerContainer;","import React from 'react';\nimport BackgroundVideo from './assets/videos/horror_background.mp4';\nimport './scss/App.scss';\nimport MoviePickerContainer from './components/MoviePickerContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <video className='background-video' autoPlay loop muted>\n        <source src={BackgroundVideo} type='video/mp4' />\n      </video>\n      <MoviePickerContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}